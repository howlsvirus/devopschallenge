AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 instance in a VPC with ngnix

Parameters:

  ImageId:
    Type: String
    Description: 'us-west-2 Region'
    Default: 'ami-00fb69cb74c1ae173'
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: SubnetId of an existing subnet (for the primary network) in your
      Virtual Private Cloud (VPC)
    ConstraintDescription: must be an existing subnet in the selected Virtual Private
      Cloud.
  InstanceType:
    Type: String
    Description: Choosing  t2 micro because it is free
    Default: t2.micro
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: demokeypair
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-west-2:
      HVM64: ami-02701bcdc5509e57b
      HVMG2: ami-00fb69cb74c1ae173
Resources:
  DemoInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch,
          !Ref 'InstanceType', Arch]]
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          DeleteOnTermination: true
          SubnetId: !Ref SubnetId
          GroupSet:
            - !Ref DemoSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt update
          apt install python-pip -y
          pip install ansible -y
          apt install net-tools -y
          ansible-galaxy install nginxinc.nginx -y
          cat <<EOF > playbook.yml
          ---
          - hosts: localhost
            become: true
            roles:
              - role: nginxinc.nginx
          EOF
          ansible-playbook playbook.yml
          netstat -pant | grep nginx >> localIP.txt
  DemoSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SG to allow SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: SSH-SG

Outputs:
  PublicIp:
    Value:
      Fn::GetAtt:
      - DemoInstance
      - PublicIp
    Description: Server's PublicIp Address
